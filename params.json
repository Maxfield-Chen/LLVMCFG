{
  "name": "LLVMCFG",
  "tagline": "LLVM Pass for dynamic CFG generation",
  "body": "# Overview\r\n\r\n###### Notice, this project is WIP\r\n\r\nLLVMCFG is an llvm pass that modifies the code generation phase of the clang compiler. Given some source code, the generated code will keep track of all branches taken at runtime, and outputs a dynamically computed control flow graph. This project was inspired by the `cbr.c` and `cbrtrace.c` samples in the DynamoRIO code base which compute the control flow dynamically using dynamic binary instrumentation.\r\n\r\n# Implementation\r\n\r\nIn order to compute the dynamic control flow graph, we must specifically target conditional branch instructions:\r\n\r\n``` {.nasm}\r\n  br i1 %1 %2 %3\r\n\r\n; <label>2:\r\n  call void @__branch_taken(i32 *src, i32 *targ)\r\n  br %4\r\n\r\n; <label>3:\r\n  call void @__branch_not_taken(i32 *src, i32 *fall)\r\n  br %5\r\n\r\n; <label>4:\r\n  ; original target branch\r\n  ; ...\r\n\r\n; <label>5:\r\n  ; original fallthrough branch\r\n  ; ...\r\n```\r\n\r\nHere, we victimize the conditional branch instruction to jump either to our branch_taken label or to our branch_not_taken label (labels `%2` and `%3`, respectively). If we took the true branch, we notify accordingly by calling __branch_taken(), and if we took the false branch we call __branch_not_taken(). In this manner we can compute the control graph dynamically.\r\n\r\n# Applications\r\n\r\n## Branch Coverage\r\nOnce we have constructed the dynamically computed CFG, we can \"diff\" this against a more complete, statically computed control flow graph in order to determine which branches were not taken at runtime.\r\n\r\n## Static Analysis Aide\r\nSometimes certain static analysis tools like IDA and radare2 will miss certain dynamic control flow instructions (`[call|jmp] rax`) as they are computationally hard to determine statically. Examples of these include switch-case statements and jump tables. Given a \"good\" execution of a program, we can likely reconstruct a good portion of the switch-case statement very simply.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}